import java.lang.reflect.Array;
import java.util.*;
import java.util.ArrayList;

/**
 * Group Project -- Messaging
 * <p>
 * This class creates Messaging objects for our platform 
 * so that users are able to send and receive messages
 *
 * @author L30-Team 1, CS180
 * @version Nov 2, 2024
 */

public class Messaging {
    private User sender;
    private User receiver;
    private String messageContent;
    private ArrayList<String> messages;
    private boolean restrictFriends;

    public Messaging(User sender, User receiver, String messageContent, boolean restrictFriends) {
        this.sender = sender;
        this.receiver = receiver;
        this.messageContent = messageContent;
        this.messages = new ArrayList<>();
        this.restrictFriends = restrictFriends;

    }

    //Setting to restrictive friends
    public boolean isRestrictFriends() {
        return restrictFriends;
    }

    public void setRestrictFriends(boolean restrictFriends) {
        this.restrictFriends = restrictFriends;
    }

    //Sending a message and checking if target user is either blocked or not a friend
    public void sendMessage() throws InvalidException {
        if (sender.getBlocked().contains(receiver)) {
            throw new InvalidException("Cannot send message, user is blocked");
        } else if (!sender.getFriends().contains(receiver) && restrictFriends == true) {
            throw new InvalidException("Cannot send message, user is not a friend");
        }
        messages.add(messageContent);
        System.out.println("Message sent: " + messageContent);
    }

    //Deleting a message
    public void deleteMessage(String targetMessage) throws InvalidException{
        if (messages.contains(targetMessage)) {
            messages.remove(targetMessage);
            System.out.println("Removed: " + targetMessage);
        } else {
            throw new InvalidException("Message not found!");
        }

    }

}
