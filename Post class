import java.util.*;

public class Post {
    private int likes; // An integer holding the number of likes the post received
    private int dislikes; // An integer holding the number of dislikes the post received
    private ArrayList<String> commentsList; // An arrayList of Strings holding the comments the post received
    private int comments; // An integer holding the number of comments the post received
    private boolean canComment;
    private User posted;
    private boolean isHidden;
    private ArrayList<User> postFriends;
    private User commented;
    private int upvoteCount;
    private int downvoteCount;

    // The Post class constructor assigns the User given in the parameter to the instance variable
    // It sets all the other values to our platform default settings
    public Post(User posted) {
        this.likes = 0;
        this.dislikes = 0;
        this.commentsList = null;
        this.comments = 0;
        this.isHidden = false;
        this.posted = posted;
        this.canComment = true;
        this.upvoteCount = 0;
        this.downvoteCount = 0;
        this.postFriends = posted.getFriends();
    }


    public void setCommentStatus(boolean commentStatus) {
        this.canComment = commentStatus;
    }

    public boolean getCommentStatus() {
        return canComment;
    }

    public void addComment(String comment, User commented) {
        commentsList.add(comment);
        this.commented = commented;
    }

    public void removeComment(String comment, User com) {
        if (com.equals(commented) || (com.equals(posted))) {
            commentsList.remove(commentsList.indexOf(comment));
        }
    }

    public void upvoteComment() {
        this.upvoteCount++;
    }

    public void downvoteComment() {
        this.downvoteCount++;
    }

    public void hidePost(User wantHidden) {
        if (!isHidden) {
            this.isHidden = true;
            postFriends.add(wantHidden);
        }
    }

    public void unHidepost(User wantUnHidden) {
        if (isHidden) {
            postFriends.remove(wantUnHidden);
            this.isHidden = false;
        }
    }
    
    

}
